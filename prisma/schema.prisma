generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  name         String
  email        String   @unique
  passwordHash String
  role         String   @default("user")
  polls        Poll[]   @relation("UserPolls")
  votes        Vote[]
  createdAt    DateTime @default(now())
}

model Poll {
  id          Int          @id @default(autoincrement())
  question    String
  isPublished Boolean      @default(false)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  creatorId   Int
  creator     User         @relation(fields: [creatorId], references: [id], name: "UserPolls", onDelete: Cascade)
  options     PollOption[]
  votes       Vote[]
}

model PollOption {
  id     Int
  text   String
  pollId Int
  poll   Poll   @relation(fields: [pollId], references: [id], onDelete: Cascade)
  votes  Vote[]

  @@id([pollId, id])
}

model Vote {
  id       Int @id @default(autoincrement())
  userId   Int
  optionId Int
  pollId   Int

  user   User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  option PollOption @relation(fields: [pollId, optionId], references: [pollId, id], onDelete: Cascade)
  poll   Poll       @relation(fields: [pollId], references: [id], onDelete: Cascade)

  @@unique([userId, pollId])
}
